/*
 * Copyright 2017 Nicola De Fiorenze
 *
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 *
 *        http://www.apache.org/licenses/LICENSE-2.0
 *
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 */

apply plugin: 'com.android.application'

apply plugin: 'com.apollographql.android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply plugin: 'com.getkeepsafe.dexcount'

apply plugin: 'com.diffplug.gradle.spotless'
spotless {
    kotlin {
        target "**/*.kt"
        ktlint(versions.ktlint)
        licenseHeaderFile '../spotless/copyright.kt'
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion '26.0.2'
    defaultConfig {
        applicationId "com.nicoladefiorenze.pokedex"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "0.1"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

androidExtensions {
    experimental = true
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "android.arch.lifecycle:runtime:${versions.arch_comp}"
    implementation "android.arch.lifecycle:extensions:${versions.arch_comp}"
    implementation "android.arch.lifecycle:reactivestreams:${versions.arch_comp}"
    kapt "android.arch.lifecycle:compiler:${versions.arch_comp}"

    implementation "android.arch.persistence.room:runtime:${versions.arch_comp}"
    implementation "android.arch.persistence.room:rxjava2:${versions.arch_comp}"
    kapt "android.arch.persistence.room:compiler:${versions.arch_comp}"


    implementation "io.reactivex.rxjava2:rxjava:2.1.5"
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1"

    implementation 'com.android.support:design:26.1.0'
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation "com.android.support.constraint:constraint-layout:${versions.constraint_layout}"

    implementation "com.google.dagger:dagger:${versions.dagger}"
    implementation "com.google.dagger:dagger-android:${versions.dagger}"
    implementation "com.google.dagger:dagger-android-support:${versions.dagger}"
    kapt "com.google.dagger:dagger-compiler:${versions.dagger}"
    kapt "com.google.dagger:dagger-android-processor:${versions.dagger}"

    implementation 'com.jakewharton.timber:timber:4.5.1'
    implementation 'com.apollographql.apollo:apollo-rx2-support:0.4.1'

    implementation 'com.github.brianegan.bansa:bansa:1.0.0-beta'
    implementation 'com.github.brianegan.bansa:bansaKotlin:1.0.0-beta'

    debugImplementation "com.squareup.leakcanary:leakcanary-android:${versions.leakcanary}"
    releaseImplementation "com.squareup.leakcanary:leakcanary-android-no-op:${versions.leakcanary}"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation ('com.android.support.test.espresso:espresso-core:3.0.1', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre8:${versions.kotlin}"
}
